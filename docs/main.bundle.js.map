{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/shared/fetch-json.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \".wrapper {\\n    width: 1200px;\\n    padding: 20px;\\n    font-size: 18px;\\n}\\n\\ntd {\\n    padding-right: 15px;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- Toolbar area -->\\n<mat-toolbar>\\n  <mat-toolbar-row>\\n    <span>\\n      <h1>{{ title }}</h1>\\n    </span>\\n    <span class=\\\"fill-remaining-space\\\"></span>\\n    <span>\\n    <button mat-icon-button (click)='filter_toggle=!filter_toggle'>\\n        <i class=\\\"material-icons\\\">filter_list</i>\\n      </button>\\n      <button mat-icon-button (click)='randomRecipie()'>\\n        <i class=\\\"fas fa-random\\\"></i>\\n      </button>\\n    </span>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n\\n<div fxLayout=\\\"row\\\" fxLayoutAlign.gt-sm=\\\"center\\\">\\n  <div fxLayout=\\\"column\\\" class=\\\"wrapper\\\">\\n    <!-- Filter Sections -->\\n    <div *ngIf=\\\"filter_toggle\\\">\\n      <h2>Filter</h2>\\n      <div>\\n        <mat-button-toggle *ngFor=\\\"let item of ingridients_list; let i = index\\\" (click)=toggleIngridient(i)>\\n          {{ item.name }}\\n        </mat-button-toggle>\\n      </div>\\n    </div>\\n\\n    <!-- Recipie section -->\\n    <h2>{{ recipie_list[current_index].name }}</h2>\\n    <div fxFlex>\\n      <p>\\n        Recipie #{{ current_index+1 }}\\n        <br>\\n        {{ recipie_list[current_index].port }} port\\n        <br><br>\\n        {{ recipie_list[current_index].desc }}\\n      </p>\\n    </div>\\n\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\">\\n      <div fxFlex>\\n        <h3 fxHide.md fxHide.lt-md>Ingridienser</h3>\\n        <button mat-button fxHide.gt-md (click)='ingr_toggle=!ingr_toggle'>\\n          <h3>Ingridienser</h3>\\n        </button>\\n        <table *ngIf=\\\"ingr_toggle\\\">\\n          <tr *ngFor=\\\"let item of recipie_list[current_index].ingredients\\\">\\n            <td style=\\\"text-align: left\\\">\\n              {{ item[0] }} {{ item[1] }}\\n            </td>\\n          <td>\\n            {{ item[2] }}\\n          </td>\\n        </tr>\\n      </table>\\n    </div>\\n\\n    <div fxFlex>\\n      <h3 fxHide.md fxHide.lt-md>Metod</h3>\\n      <button mat-button fxHide.gt-md (click)='method_toggle=!method_toggle'>\\n        <h3>Metod</h3>\\n      </button>\\n      <table *ngIf=\\\"method_toggle\\\">\\n        <tr *ngFor=\\\"let item of recipie_list[current_index].method; let i = index\\\">\\n          <td>\\n            {{ i+1 }}.\\n          </td>\\n          <td>\\n            <p>\\n              {{ item }}\\n            </p>  \\n          </td>\\n        </tr>\\n      </table>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/Rx';\n\nimport { FetchJsonService } from './shared/fetch-json.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    /*\n  Variables\n  ####################################################################################################\n  */\n  /* Title of the site */\n  title:string = 'MatInspo';\n  /* URL Variables */\n  recipies_url = \"assets/files/recipies.json\"\n  ingridients_url = \"assets/files/ingridients.json\"\n  /* Variable that holds the loaded list of recipies. */\n  recipie_list:any[];\n  ingridients_list:any[];\n  /* Variable that determines which recipie is currently showing */\n  current_index:number = 5;\n\n  toggledIngridientsList:number[] = [];\n\n  /* Toggle Variables */\n  filter_toggle = true;\n  ingr_toggle = true;\n  method_toggle = true;\n\n\n  /*\n  Functions\n  ####################################################################################################\n  */\n\n  /* The consturctor fetches the recipies from the recipie.JSON using the fetchJSONService. It stores it in the recipe_list variable */\n constructor(private fetchJSONService: FetchJsonService) {\n   // Fetches the recipies\n    this.fetchJSONService.getPosts(this.recipies_url)\n    .subscribe(\n      (data: any[]) => {\n        this.recipie_list = data;\n        console.log(data);\n      },\n      (error) => console.log(error)\n    );\n    // Fetches the Ingridients\n    this.fetchJSONService.getPosts(this.ingridients_url)\n    .subscribe(\n      (data: any[]) => {\n        this.ingridients_list = data;\n        console.log(data);\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  ngOnInit() {\n  }\n  \n  /* Function which returns a random number between max and min variables */\n  getRandomInt(min:number, max:number) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  /* Function which sets the current_index to a random number within the allowed scope and different from previous current_index */\n  randomRecipie() {\n    var temp_number:number = this.current_index;\n    // The function makes sure that it's not the same recipie as the current one\n    while(temp_number == this.current_index) {\n      temp_number = this.getRandomInt(0, this.recipie_list.length-1);\n    }\n    this.current_index = temp_number;\n  }\n\n  toggleIngridient(index:number) {\n    var duplicate = false;\n    for(let i = 0; i < this.toggledIngridientsList.length; i++) {\n      if(index = this.toggledIngridientsList[i]) {\n        duplicate = true;\n        console.log('Index ' + index + ' was already in list, nothing added');\n      }\n    }\n    if(duplicate == false) {\n      this.toggledIngridientsList.push(index);\n      console.log('Index ' + index + ' was not in list and is now added');\n    }\n    return duplicate;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n/* Materials imports */\nimport {\n  MatCardModule,\n  MatButtonModule,\n  MatTableModule,\n  MatToolbarModule,\n  MatListModule,\n  MatGridListModule,\n  MatButtonToggleModule\n} from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { FetchJsonService } from './shared/fetch-json.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    HttpModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatToolbarModule,\n    MatListModule,\n    MatGridListModule,\n    MatButtonToggleModule\n  ],\n  providers: [FetchJsonService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable, EventEmitter } from '@angular/core';\nimport {\n  Http,\n  Response\n} from '@angular/http';\nimport 'rxjs/Rx';\n\n@Injectable()\nexport class FetchJsonService {\n\n  constructor(private _http: Http) { }\n\n  getPosts(url:string) {\n    return this._http.get(url)\n                      .map(\n                        (response: Response) => {\n                          const data = response.json();\n                          return data;\n                        }\n                      );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/fetch-json.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}